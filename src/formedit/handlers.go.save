package main

import (
	"fmt"
	//	"io"
	"log"
	"net/http"
	//	"net/http/httputil"
	//	"os"
	//        "github.com/gorilla/mux"
)

func SimpleForm(w http.ResponseWriter, r *http.Request) {

	token := getCookieByName(r.Cookies(), cookieid)
	var htmlstring string
	auth := isAuthorized(token)

	if auth == true {
		status := r.URL.Query().Get("status")
		if status == "" {

			page := `<html>
<head>
  <title>Form Edit</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
</head>
<body>
<div class="container">
<nav class="navbar navbar-default">
        <div class="container">
          <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target=".navbar-collapse">
              <span class="sr-only">Toggle navigation</span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Form Editor</a>
          </div>
          <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
              <li><a href="/formedit/?status=one">In Progress</a></li>
              <li><a href="/formedit/?status=two">Submitted for Approval</a></li>
              <li><a href="/formedit/?status=three">Approved</a></li>
              <li><a href="/formedit/?status=ready">Certified</a></li>
              <li><a href="/formedit/?status=done">Inserted into GSToRE</a></li>
            </ul>
          </div>
        </div>
      </nav>
</div>
</body>
</html>
`

			fmt.Fprintln(w, page)

		} else {
			var statnumber string
			switch status {
			case "done":
				statnumber = "5"

			case "ready":
				statnumber = "4"

			case "three":
				statnumber = "3"

			case "two":
				statnumber = "2"

			case "one":
				statnumber = "1"

			default:
				fmt.Fprintln(w, "bad status")
			}
			if statnumber != "" {
				var count int
				query := `select id from datasets where status = '` + statnumber + `';`
				rows, err := formdb.Query(query)
				if err != nil {
					log.Fatal(err)
				}
				for rows.Next() {
					var id string
					err = rows.Scan(&id)
//htmlstring = htmlstring + `<a class="btn btn-primary custom" href="/formedit/edit?id=`+id+`">`+id+`</a>`
htmlstring = htmlstring + `<a class="btn btn-primary custom" href="/formedit/edit?id=`+id+`">`+id+`</a>`
					count++
					if count==15{
					htmlstring = htmlstring + `</p>`
					count = 0
					}
				}

				uppage := `<html>
<head>
  <title>Form Edit</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <style>
   .custom {
     width: 76px !important;
     }
     .centered
     {
       text-align:center;
      }
  </style>

</head>
<body>


<div class="container">


<nav class="navbar navbar-default">
        <div class="container">
          <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target=".navbar-collapse">
              <span class="sr-only">Toggle navigation</span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Form Editor</a>
          </div>
          <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
              <li><a href="/formedit/?status=one">In Progress</a></li>
              <li><a href="/formedit/?status=two">Submitted for Approval</a></li>
              <li><a href="/formedit/?status=three">Approved</a></li>
              <li><a href="/formedit/?status=ready">Certified</a></li>
              <li><a href="/formedit/?status=done">Inserted into GSToRE</a></li>

            </ul>
          </div>
        </div>
      </nav>
</div>
<div class="centered">
`+htmlstring+`
</div>
</body>
</html>`
				fmt.Fprintln(w, uppage)
			}
		}
	} else {
		w.WriteHeader(http.StatusUnauthorized)
		w.Write([]byte("Unauthorized"))
	}
}

func SaveEdit(w http.ResponseWriter, r *http.Request) {
        token := getCookieByName(r.Cookies(), cookieid)
       	auth := isAuthorized(token)
       	if auth == true {
	r.ParseForm()
	var id string
	id=r.Form["id"]
        fmt.Println(string(id))
	}
}


func SimpleEdit(w http.ResponseWriter, r *http.Request) {
	token := getCookieByName(r.Cookies(), cookieid)
	auth := isAuthorized(token)
	if auth == true {

		var datasetname, id, userid, status, collectionid, categoryid, subcategoryid, institutionid, firstname, lastname, email, phone, firstnamepi, lastnamepi, emailpi, phonepi, abstract string
		ID := r.URL.Query().Get("id")

		query := `SELECT
                  id, datasetname, userid, status, collectionid, categoryid, subcategoryid, institutionid, firstname, lastname, email, phone, firstnamepi, lastnamepi, emailpi, phonepi, abstract
                  FROM datasets
                  WHERE id = '` + ID + `';`

		//phone, firstnamepi, lastnamepi, emailpi, phonepi, abstract                                                                                                  , purpose                     , otherinfo, keywords          , placenames, deliverymethod, filename         , filetype, filedescription, licensename, licensereference, licensereason, embargoreleasedate, embargoreason, uploadtodataone, step, datecertified, isotopicid, datecreated
		//                  FROM datasets
		//                WHERE id = '` + ID + `';`

		rows, err := formdb.Query(query)
		if err != nil {
			log.Fatal(err)
		}
		for rows.Next() {
			// var id string
			err = rows.Scan(&id, &datasetname, &userid, &status, &collectionid, &categoryid, &subcategoryid, &institutionid, &firstname, &lastname, &email, &phone, &firstnamepi, &lastnamepi, &emailpi, &phonepi, &abstract)
			/*
			   page:=`
			   <html>
			   <head>
			   <title>Form edit</title>
			   </head>
			    <body>
			    <form action="/formedit/save" method="get">
			     ID: <input type="text" name="id" value="`+id+`" readonly><br>
			     Dataset Name: <input type="text" name="datasetname" value="`+datasetname+`"><br>
			     First Name: <input type="text" name="firstname" value="`+firstname+`" readonly><br>
			     Last Name: <input type="text" name="lastname" value="`+lastname+`" readonly><br>
			     E-Mail: <input type="text" name="email" value="`+email+`" readonly><br>
			     Phone: <input type="text" name="phone" value="`+phone+`" readonly><br>
			     First Name PI: <input type="text" name="firstnamepi" value="`+firstnamepi+`" readonly><br>
			     Last Name PI: <input type="text" name="lastnamepi" value="`+lastnamepi+`" readonly><br>
			     E-Mail PI: <input type="text" name="emailpi" value="`+emailpi+`" readonly><br>
			     Phone PI: <input type="text" name="phonepi" value="`+phonepi+`" readonly><br>
			     Abstract: <input rows="5" type="text" name="abstract" value="`+abstract+`" readonly><br>
			     <input type="submit" value="Submit">
			   </form>
			    </body>
			   </html>`
			*/
			page := `
<html>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
<head>
  <title>Form Edit</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<style>
.customboarder{
  width: 100%;
  color: #555;
  border: 1px solid #ccc;
  border-radius: 4px;
  padding: 20px;
}
</style>

</head>
<body>


<div class="container">


<nav class="navbar navbar-default">
        <div class="container">
          <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target=".navbar-collapse">
              <span class="sr-only">Toggle navigation</span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Form Editor</a>
          </div>
          <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
              <li><a href="/formedit/?status=one">In Progress</a></li>
              <li><a href="/formedit/?status=two">Submitted for Approval</a></li>
              <li><a href="/formedit/?status=three">Approved</a></li>
              <li><a href="/formedit/?status=ready">Certified</a></li>
              <li><a href="/formedit/?status=done">Inserted into GSToRE</a></li>
            
            </ul>
          </div><!--/.nav-collapse -->
        </div>
      </nav>

  <form class="form-horizontal" action="/formedit/save" method="post">

    <div class="form-group customboarder">
      <label class="control-label col-sm-2" for="id">ID:</label>
      <div class="col-sm-10">

        <input type="text" class="form-control" name="id" value="` + id + `" readonly><br>
      </div>
    </div>

    <div class="form-group">
      <label class="control-label col-sm-2" for="datasetname">Dataset Name :</label>
      <div class="col-sm-10">          
        <input type="text" class="form-control" name="datasetname" value="` + datasetname + `"><br>
      </div>
    </div>

    <div class="form-group">
      <label class="control-label col-sm-2" for="firstname">First Name:</label>
      <div class="col-sm-10">          
        <input type="text" class="form-control" name="firstname" value="` + firstname + `" readonly>
      </div>
    </div>
    <div class="form-group">
      <label class="control-label col-sm-2" for="lastname">Last Name:</label>
      <div class="col-sm-10">          
        <input type="text" class="form-control" name="lastname" value="` + lastname + `" readonly>
      </div>
    </div>
    <div class="form-group">
      <label class="control-label col-sm-2" for="email">E-Mail:</label>
      <div class="col-sm-10">          
        <input type="text" class="form-control" name="email" value="` + email + `" readonly>
      </div>
    </div>
    <div class="form-group">
      <label class="control-label col-sm-2" for="phone">Phone:</label>
      <div class="col-sm-10">          
        <input type="text" class="form-control" name="phone" value="` + phone + `" readonly>
      </div>
    </div>
    <div class="form-group">
      <label class="control-label col-sm-2" for="firstnamepi">P.I. First Name:</label>
      <div class="col-sm-10">          
        <input type="text" class="form-control" name="firstnamepi" value="` + firstnamepi + `" readonly>
      </div>
    </div>
    <div class="form-group">
      <label class="control-label col-sm-2" for="lastnamepi">P.I. Last Name:</label>
      <div class="col-sm-10">          
        <input type="text" class="form-control" name="lastnamepi" value="` + lastnamepi + `" readonly>
      </div>
    </div>
    <div class="form-group">
      <label class="control-label col-sm-2" for="emailpi">P.I. E-Mail:</label>
      <div class="col-sm-10">          
        <input type="text" class="form-control" name="emailpi" value="` + emailpi + `" readonly>
      </div>
    </div>
    <div class="form-group">
      <label class="control-label col-sm-2" for="phonepi">P.I. Phone Number:</label>
      <div class="col-sm-10">          
        <input type="text" class="form-control" name="phonepi" value="` + phonepi + `" readonly>
      </div>
    </div>
    <div class="form-group">
      <label class="control-label col-sm-2" for="abstract">Abstract:</label>
      <div class="col-sm-10">          
        <textarea rows="8" class="form-control" name="abstract" >` + abstract + `</textarea>
      </div>
    </div>
    <div class="form-group">        
      <div class="col-sm-offset-2 col-sm-10">
        <button type="submit" class="btn btn-danger">Save</button>
      </div>
    </div>
  </form>
</div>

</body>
</html>`

			// &emailpi, &phonepi, &abstract)
			//firstnamepi, lastnamepi, emailpi, phonepi, abstract
			//  First Name PI: <input type="text" name="firstnamepi" value="`+firstnamepi+`"><br>

			fmt.Fprintln(w, page)

		}

	}

}

func getCookieByName(cookie []*http.Cookie, name string) string {
	cookieLen := len(cookie)
	result := ""
	for i := 0; i < cookieLen; i++ {
		if cookie[i].Name == name {
			result = cookie[i].Value
		}
	}
	return result
}

func isAuthorized(token string) bool {
	var username string
	query := "SELECT name FROM users u INNER JOIN sessions s ON u.uid = s.uid WHERE s.sid = '" + token + "';"
	rows, err := db.Query(query)
	if err != nil {
		log.Fatal(err)
	}
	for rows.Next() {
		err := rows.Scan(&username)
		if err != nil {
			log.Fatal(err)
		}
	}

	if username == "gvalentin" || username == "hbarrett" || username == "sdiller" {
		return true
	} else {
		return false
	}

}
